<Window x:Class="profileDesigner.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:profileDesigner"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" HorizontalAlignment="Center" VerticalAlignment="Center" WindowState="Maximized">
    <Window.CommandBindings>
        <CommandBinding Command="Open" CanExecute="CommandBinding_CanExecute" Executed=" OpenFile_Click"/>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Command="Open" Key="O" Modifiers="Ctrl"></KeyBinding>
    </Window.InputBindings>
    <Grid Name="Grid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="17"></RowDefinition>
            <RowDefinition Height="40"></RowDefinition>
            <RowDefinition Height="161*"></RowDefinition>
            <RowDefinition Height="242"></RowDefinition>
        </Grid.RowDefinitions>
        <DockPanel Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" HorizontalAlignment="Left" Height="17" LastChildFill="True" Margin="0,0,0,0" VerticalAlignment="Top" >
            <Menu x:Name="MainMenu" DockPanel.Dock="Top" Margin="0,0,0,0">
                <MenuItem Header="文件(_F)">
                    <MenuItem Name="OpenFile" Header="打开(_O)..." Command="Open" InputGestureText="Ctrl+O" ToolTip="打开项目文件">
                        <MenuItem.Icon>
                            <Image Source="/Images/OpenFolder_16x.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="导入纵断面(_I)..." />
                    <MenuItem Header="导出纵断面到DXF格式(_E)..." />
                    <Separator/>
                    <MenuItem Header="保存(_S)" InputGestureText="Ctl+S">
                        <MenuItem.Icon>
                            <Image Source="/Images/Save_16x.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="另存为(_A)..." Click="SaveAs_Click">
                        <MenuItem.Icon>
                            <Image Source="/Images/SaveAs_16x.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="退出(_X)" Click="Exit" />
                </MenuItem>
                <MenuItem Header="编辑(_E)" Click="ShowOption">
                    <MenuItem Header="编辑既有纵断面(_I)..." Click="EditExist_Click"/>
                    <MenuItem Header="编辑设计纵断面(_D)..." Click="EditDesign_Click"/>
                    <MenuItem Header="设置(_O)..." Click="ShowOption"/>
                </MenuItem>
            </Menu>
        </DockPanel>
       <ToolBarTray Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Left" Height="39" Margin="2,2,0,0" VerticalAlignment="Top" Width="400" Grid.RowSpan="2">
            <ToolBar HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,0,0">
                <Button x:Name="FileOpenButton" ToolTip="打开项目文件" Height="34" Width="26" Command="Open">
                    <Image Source="/Images/OpenFolder_16x.png"/>
                </Button>
                <Button Click="Save_Click" ToolTip="保存" Height="34" Width="26">
                    <Image Source="/Images/Save_16x.png"/>
                </Button>
                <Button Click="SaveAs_Click" ToolTip="另存为..." Height="34" Width="26">
                    <Image Source="/Images/SaveAs_16x.png"/>
                </Button>
            </ToolBar>
            <ToolBar VerticalAlignment="Top" Margin="0,0,0,0" d:LayoutOverrides="Width">
                <Button ToolTip="放大" Height="34" Width="26" Click="ZoomInButton_Click">
                    <Image Source="/Images/ZoomIn_16x.png"/>
                </Button>
                <Button ToolTip="缩小" Height="34" Width="26" Click="ZoomOutButton_Click">
                    <Image Source="/Images/ZoomOut_16x.png"/>
                </Button>
                <Button ToolTip="原始" Height="34" Width="26" Click="ZoomAllButton_Click">
                    <Image Source="/Images/AbstractAssociation_16x.png"/>
                </Button>
                <ToggleButton ToolTip="移动" Name="MouseMoveButton" IsThreeState="False" Height="34" Width="26">
                    <Image Source="/Images/MoveGlyph_16x.png"/>
                </ToggleButton>
            </ToolBar>
            <ToolBar  VerticalAlignment="Top" Margin="0,0,0,0" d:LayoutOverrides="Width">
                <Button Name="SplitButton" IsEnabled="True" ToolTip="拆分" Click="Split_Click" Height="34" Width="26">
                    <Image Source="/Images/Split_16x.png"/>
                </Button>
            </ToolBar>
        </ToolBarTray>
        <TabControl Name="ProfileTablControl" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" Margin="5,5,0,0" VerticalAlignment="Top">
            <TabItem Name="ExistTableItem" Header="既有纵断面">
                <!--<DataGrid Name="ExistDataGrid" AutoGenerateColumns="False" Margin="3" ItemsSource="{Binding}" AddingNewItem="ExistDataGrid_AddingNewItem" KeyUp="ExistDataGrid_KeyUp" CellEditEnding="existDataGrid_CellEditEnded">-->
                <DataGrid Name="ExistDataGrid" AutoGenerateColumns="False" Margin="3" ItemsSource="{Binding}" CellEditEnding="existDataGrid_CellEditEnding" KeyUp="ExistDataGrid_KeyUp" BeginningEdit="ExistDataGrid_BeginningEdit" CanUserDeleteRows="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="长度" Binding="{Binding Length, Mode=TwoWay}" Width="*"/>
                        <DataGridTextColumn Header="坡度" Binding="{Binding Grade, Mode=TwoWay}"  Width="*"/>
                        <DataGridTextColumn Header="始端高程" Binding="{Binding BeginAltitude, Mode=TwoWay}"  Width="1.5*"/>
                        <DataGridTextColumn Header="终端高程" Binding="{Binding EndAltitude, Mode=TwoWay}"  Width="1.5*"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Name="DesignTableItem" Header="设计纵断面">
                <DataGrid Name="DesignDataGrid" AutoGenerateColumns="False" Margin="3" ItemsSource="{Binding}" CellEditEnding="designDataGrid_CellEditEnding" BeginningEdit="DesignDataGrid_BeginningEdit" KeyUp="DesignDataGrid_KeyUp">
                    <!-- -->
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="长度" Binding="{Binding Length, Mode=TwoWay}" Width="*"/>
                        <DataGridTextColumn Header="坡度" Binding="{Binding Grade, Mode=TwoWay}"  Width="*"/>
                        <DataGridTextColumn Header="始端高程" Binding="{Binding BeginAltitude, Mode=TwoWay}"  Width="1.5*"/>
                        <DataGridTextColumn Header="终端高程" Binding="{Binding EndAltitude, Mode=TwoWay}"  Width="1.5*"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
        </TabControl>
        <GridSplitter Grid.Row="2" Grid.RowSpan="2" Grid.Column="1" Width="5" HorizontalAlignment="stretch" />

        <Line X1="10" Y1="-5100" X2="200" Y2="-5100" Stroke="White" StrokeThickness="0">
            <Line.RenderTransform>
                <TranslateTransform x:Name="ExistPolylineTranslate"/>
            </Line.RenderTransform>
        </Line>
        
        <!--
        <Canvas Name="ProfileCanvas" Grid.Column="2" Margin="0" Grid.Row="2" ClipToBounds="True" MouseDown="ProfileCanvas_MouseDown" MouseUp="ProfileCanvas_MouseUp" Background="Transparent" MouseMove="ProfileCanvas_MouseMove" MouseWheel="ProfileCanvas_MouseWheel" Grid.ColumnSpan="2" Grid.RowSpan="3">
            <Polyline Name="ExistPolyline" Stroke="Red" StrokeThickness="{Binding ExistProfileOption.LineWidth}" Visibility="{Binding Path=ExistVisibility}" StrokeDashArray="10, 5" >
                <Polyline.RenderTransform>
                    <TranslateTransform x:Name="ExistPolylineTranslate"/>
                </Polyline.RenderTransform>
            </Polyline>
            <Polyline Name="DesignPolyline" Stroke="Black" StrokeThickness="{Binding DesignProfileOption.LineWidth}" Visibility="{Binding Path=DesignVisibility}" >
                <Polyline.RenderTransform >
                    <TranslateTransform x:Name="DesignPolylineTranslate"/>
                </Polyline.RenderTransform>
            </Polyline>
        </Canvas>
        -->
        
        <!-- 设计 坡度线-->
        <ItemsControl x:Name="DesignProfileLine" ItemsSource="{Binding Items, ElementName=DesignDataGrid}" Margin="0,0,0,100" Grid.Column="2" Grid.Row="2">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas Grid.Row="2" Grid.RowSpan="0" Grid.Column="2"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Line X1="{Binding X1}" Y1="{Binding Y1}" X2="{Binding X2}" Y2="{Binding Y2}" Stroke="Blue" StrokeThickness="3" >
                        <Line.RenderTransform>
                            <TranslateTransform X="{Binding X, ElementName=ExistPolylineTranslate}" Y="{Binding Y, ElementName=ExistPolylineTranslate}"/>
                        </Line.RenderTransform>
                    </Line>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <!-- 既有 坡度线-->
        <ItemsControl x:Name="ExistProfileLine" ItemsSource="{Binding Items, ElementName=ExistDataGrid}" Margin="0,0,0,100" Grid.Column="2" Grid.Row="2">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas Grid.Row="2" Grid.RowSpan="0" Grid.Column="2"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Line X1="{Binding X1}" Y1="{Binding Y1}" X2="{Binding X2}" Y2="{Binding Y2}" Stroke="Red" StrokeThickness="2" >
                        <Line.RenderTransform>
                            <TranslateTransform X="{Binding X, ElementName=ExistPolylineTranslate}" Y="{Binding Y, ElementName=ExistPolylineTranslate}"/>
                        </Line.RenderTransform>
                    </Line>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <Canvas Name="TableHeadCanvas" Grid.Column="0" Margin="0,0,0,0" Grid.Row="3" ClipToBounds="True" >
            <Rectangle Canvas.Top="0" Width="{Binding ActualWidth, ElementName=TableHeadCanvas, Mode=OneWay}" Height="50" Stroke="Black" StrokeThickness="2"/>
            <Rectangle Canvas.Top="48" Width="{Binding ActualWidth, ElementName=TableHeadCanvas, Mode=OneWay}" Height="50" Stroke="Black" StrokeThickness="2"/>
            <Rectangle Canvas.Top="96" Width="{Binding ActualWidth, ElementName=TableHeadCanvas, Mode=OneWay}" Height="50" Stroke="Black" StrokeThickness="2"/>
            <Rectangle Canvas.Top="144" Width="{Binding ActualWidth, ElementName=TableHeadCanvas, Mode=OneWay}" Height="50" Stroke="Black" StrokeThickness="2"/>
            <Rectangle Canvas.Top="192" Width="{Binding ActualWidth, ElementName=TableHeadCanvas, Mode=OneWay}" Height="50" Stroke="Black" StrokeThickness="2"/>
            <Label x:Name="label" Content="设计纵断面" FontSize="24" Canvas.Left="0" Canvas.Top="0" Height="48" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="{Binding ActualWidth, ElementName=TableHeadCanvas, Mode=OneWay}"/>
            <Label Content="设计高程" FontSize="24" Canvas.Left="0" Canvas.Top="48" Height="48" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="{Binding ActualWidth, ElementName=TableHeadCanvas, Mode=OneWay}"/>
            <Label Content="高差" FontSize="24" Canvas.Left="0" Canvas.Top="96" Height="48" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="{Binding ActualWidth, ElementName=TableHeadCanvas, Mode=OneWay}"/>
            <Label Content="既有高程" FontSize="24" Canvas.Left="0" Canvas.Top="144" Height="48" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="{Binding ActualWidth, ElementName=TableHeadCanvas, Mode=OneWay}"/>
            <Label Content="既有纵断面" FontSize="24" Canvas.Left="0" Canvas.Top="192" Height="48" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="{Binding ActualWidth, ElementName=TableHeadCanvas, Mode=OneWay}"/>
        </Canvas>
        <Grid x:Name="ButtomTableGrid" Margin="0 0 0 0" Grid.Row="3" Grid.Column="2">
            <Canvas Name="TableCanvas" Grid.Column="2" Margin="0,0,0,0" Grid.Row="3" ClipToBounds="True" >
                <Rectangle Name="DesignTableRectangle" Canvas.Top="0" Width="{Binding ActualWidth, ElementName=ButtomTableGrid, Mode=OneWay}" Height="50" Stroke="Black" StrokeThickness="2"></Rectangle>
                <Rectangle Name="DesignAltitudeRectangle" Canvas.Top="48" Width="{Binding ActualWidth, ElementName=ButtomTableGrid, Mode=OneWay}" Height="50" Stroke="Black" StrokeThickness="2"></Rectangle>
                <Rectangle Name="AltitudeDifferenceRectangle" Canvas.Top="96" Width="{Binding ActualWidth, ElementName=ButtomTableGrid, Mode=OneWay}" Height="50" Stroke="Black" StrokeThickness="2"/>
                <Rectangle Name="ExistAltitudeRectangle" Canvas.Top="144" Width="{Binding ActualWidth, ElementName=ButtomTableGrid, Mode=OneWay}" Height="50" Stroke="Black" StrokeThickness="2"/>
                <Rectangle Name="ExistTableRectangle" Canvas.Top="192" Width="{Binding ActualWidth, ElementName=ButtomTableGrid, Mode=OneWay}" Height="50" Stroke="Black" StrokeThickness="2">
                    <Rectangle.RenderTransform>
                        <TranslateTransform x:Name="ExistTableTransform"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Canvas>
        </Grid>
    </Grid>
</Window>
